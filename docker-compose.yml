version: '3.8'

services:
  app:
    build:
      context: .
      target: production
    image: dinopedia
    environment:
      APP_DEBUG_MODE: "True"
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: dinopedia
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    entrypoint: ""
    command: "bash start.sh"
    ports:
      - 8000:8000
    volumes:
      - ./dinopedia:/usr/dinopedia/app/dinopedia
      - ./tests:/usr/dinopedia/app/tests
      - ./pyproject.toml:/usr/dinopedia/app/pyproject.toml
      - ./poetry.lock:/usr/dinopedia/app/poetry.lock
      - ./start.sh:/usr/dinopedia/app/start.sh
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: dinopedia
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
